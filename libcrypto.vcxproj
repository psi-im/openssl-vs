<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseLTO|Win32">
      <Configuration>ReleaseLTO</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseLTO|x64">
      <Configuration>ReleaseLTO</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="openssl\crypto\aes\aes_cfb.c" />
    <ClCompile Include="openssl\crypto\aes\aes_ecb.c" />
    <ClCompile Include="openssl\crypto\aes\aes_ige.c" />
    <ClCompile Include="openssl\crypto\aes\aes_misc.c" />
    <ClCompile Include="openssl\crypto\aes\aes_ofb.c" />
    <ClCompile Include="openssl\crypto\aes\aes_wrap.c" />
    <ClCompile Include="openssl\crypto\asn1\ameth_lib.c" />
    <ClCompile Include="openssl\crypto\asn1\asn1_err.c" />
    <ClCompile Include="openssl\crypto\asn1\asn1_gen.c" />
    <ClCompile Include="openssl\crypto\asn1\asn1_lib.c" />
    <ClCompile Include="openssl\crypto\asn1\asn1_par.c" />
    <ClCompile Include="openssl\crypto\asn1\asn_mime.c" />
    <ClCompile Include="openssl\crypto\asn1\asn_moid.c" />
    <ClCompile Include="openssl\crypto\asn1\asn_mstbl.c" />
    <ClCompile Include="openssl\crypto\asn1\asn_pack.c" />
    <ClCompile Include="openssl\crypto\asn1\a_bitstr.c" />
    <ClCompile Include="openssl\crypto\asn1\a_d2i_fp.c" />
    <ClCompile Include="openssl\crypto\asn1\a_digest.c" />
    <ClCompile Include="openssl\crypto\asn1\a_dup.c" />
    <ClCompile Include="openssl\crypto\asn1\a_gentm.c" />
    <ClCompile Include="openssl\crypto\asn1\a_i2d_fp.c" />
    <ClCompile Include="openssl\crypto\asn1\a_int.c" />
    <ClCompile Include="openssl\crypto\asn1\a_mbstr.c" />
    <ClCompile Include="openssl\crypto\asn1\a_object.c" />
    <ClCompile Include="openssl\crypto\asn1\a_octet.c" />
    <ClCompile Include="openssl\crypto\asn1\a_print.c" />
    <ClCompile Include="openssl\crypto\asn1\a_sign.c" />
    <ClCompile Include="openssl\crypto\asn1\a_strex.c" />
    <ClCompile Include="openssl\crypto\asn1\a_strnid.c" />
    <ClCompile Include="openssl\crypto\asn1\a_time.c" />
    <ClCompile Include="openssl\crypto\asn1\a_type.c" />
    <ClCompile Include="openssl\crypto\asn1\a_utctm.c" />
    <ClCompile Include="openssl\crypto\asn1\a_utf8.c" />
    <ClCompile Include="openssl\crypto\asn1\a_verify.c" />
    <ClCompile Include="openssl\crypto\asn1\bio_asn1.c" />
    <ClCompile Include="openssl\crypto\asn1\bio_ndef.c" />
    <ClCompile Include="openssl\crypto\asn1\d2i_pr.c" />
    <ClCompile Include="openssl\crypto\asn1\d2i_pu.c" />
    <ClCompile Include="openssl\crypto\asn1\evp_asn1.c" />
    <ClCompile Include="openssl\crypto\asn1\f_int.c" />
    <ClCompile Include="openssl\crypto\asn1\f_string.c" />
    <ClCompile Include="openssl\crypto\asn1\i2d_pr.c" />
    <ClCompile Include="openssl\crypto\asn1\i2d_pu.c" />
    <ClCompile Include="openssl\crypto\asn1\nsseq.c" />
    <ClCompile Include="openssl\crypto\asn1\n_pkey.c" />
    <ClCompile Include="openssl\crypto\asn1\p5_pbe.c" />
    <ClCompile Include="openssl\crypto\asn1\p5_pbev2.c" />
    <ClCompile Include="openssl\crypto\asn1\p5_scrypt.c" />
    <ClCompile Include="openssl\crypto\asn1\p8_pkey.c" />
    <ClCompile Include="openssl\crypto\asn1\tasn_dec.c" />
    <ClCompile Include="openssl\crypto\asn1\tasn_enc.c" />
    <ClCompile Include="openssl\crypto\asn1\tasn_fre.c" />
    <ClCompile Include="openssl\crypto\asn1\tasn_new.c" />
    <ClCompile Include="openssl\crypto\asn1\tasn_prn.c" />
    <ClCompile Include="openssl\crypto\asn1\tasn_scn.c" />
    <ClCompile Include="openssl\crypto\asn1\tasn_typ.c" />
    <ClCompile Include="openssl\crypto\asn1\tasn_utl.c" />
    <ClCompile Include="openssl\crypto\asn1\t_bitst.c" />
    <ClCompile Include="openssl\crypto\asn1\t_pkey.c" />
    <ClCompile Include="openssl\crypto\asn1\t_spki.c" />
    <ClCompile Include="openssl\crypto\asn1\x_algor.c" />
    <ClCompile Include="openssl\crypto\asn1\x_bignum.c" />
    <ClCompile Include="openssl\crypto\asn1\x_info.c" />
    <ClCompile Include="openssl\crypto\asn1\x_int64.c" />
    <ClCompile Include="openssl\crypto\asn1\x_long.c" />
    <ClCompile Include="openssl\crypto\asn1\x_pkey.c" />
    <ClCompile Include="openssl\crypto\asn1\x_sig.c" />
    <ClCompile Include="openssl\crypto\asn1\x_spki.c" />
    <ClCompile Include="openssl\crypto\asn1\x_val.c" />
    <ClCompile Include="openssl\crypto\async\arch\async_null.c" />
    <ClCompile Include="openssl\crypto\async\arch\async_posix.c" />
    <ClCompile Include="openssl\crypto\async\arch\async_win.c" />
    <ClCompile Include="openssl\crypto\async\async.c" />
    <ClCompile Include="openssl\crypto\async\async_err.c" />
    <ClCompile Include="openssl\crypto\async\async_wait.c" />
    <ClCompile Include="openssl\crypto\bf\bf_cfb64.c" />
    <ClCompile Include="openssl\crypto\bf\bf_ecb.c" />
    <ClCompile Include="openssl\crypto\bf\bf_enc.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="openssl\crypto\bf\bf_ofb64.c" />
    <ClCompile Include="openssl\crypto\bf\bf_skey.c" />
    <ClCompile Include="openssl\crypto\bio\bf_buff.c" />
    <ClCompile Include="openssl\crypto\bio\bf_lbuf.c" />
    <ClCompile Include="openssl\crypto\bio\bf_nbio.c" />
    <ClCompile Include="openssl\crypto\bio\bf_null.c" />
    <ClCompile Include="openssl\crypto\bio\bio_cb.c" />
    <ClCompile Include="openssl\crypto\bio\bio_err.c" />
    <ClCompile Include="openssl\crypto\bio\bio_lib.c" />
    <ClCompile Include="openssl\crypto\bio\bio_meth.c" />
    <ClCompile Include="openssl\crypto\bio\bss_acpt.c" />
    <ClCompile Include="openssl\crypto\bio\bss_bio.c" />
    <ClCompile Include="openssl\crypto\bio\bss_conn.c" />
    <ClCompile Include="openssl\crypto\bio\bss_dgram.c" />
    <ClCompile Include="openssl\crypto\bio\bss_fd.c" />
    <ClCompile Include="openssl\crypto\bio\bss_file.c" />
    <ClCompile Include="openssl\crypto\bio\bss_log.c" />
    <ClCompile Include="openssl\crypto\bio\bss_mem.c" />
    <ClCompile Include="openssl\crypto\bio\bss_null.c" />
    <ClCompile Include="openssl\crypto\bio\bss_sock.c" />
    <ClCompile Include="openssl\crypto\bio\b_addr.c" />
    <ClCompile Include="openssl\crypto\bio\b_dump.c" />
    <ClCompile Include="openssl\crypto\bio\b_print.c">
      <ForcedIncludeFiles>stdint.h;%(ForcedIncludeFiles)</ForcedIncludeFiles>
    </ClCompile>
    <ClCompile Include="openssl\crypto\bio\b_sock.c" />
    <ClCompile Include="openssl\crypto\bio\b_sock2.c" />
    <ClCompile Include="openssl\crypto\blake2\blake2b.c" />
    <ClCompile Include="openssl\crypto\blake2\blake2s.c" />
    <ClCompile Include="openssl\crypto\blake2\m_blake2b.c" />
    <ClCompile Include="openssl\crypto\blake2\m_blake2s.c" />
    <ClCompile Include="openssl\crypto\bn\bn_add.c" />
    <ClCompile Include="openssl\crypto\bn\bn_asm.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="openssl\crypto\bn\bn_blind.c" />
    <ClCompile Include="openssl\crypto\bn\bn_const.c" />
    <ClCompile Include="openssl\crypto\bn\bn_ctx.c" />
    <ClCompile Include="openssl\crypto\bn\bn_depr.c" />
    <ClCompile Include="openssl\crypto\bn\bn_dh.c" />
    <ClCompile Include="openssl\crypto\bn\bn_div.c" />
    <ClCompile Include="openssl\crypto\bn\bn_err.c" />
    <ClCompile Include="openssl\crypto\bn\bn_exp.c" />
    <ClCompile Include="openssl\crypto\bn\bn_exp2.c" />
    <ClCompile Include="openssl\crypto\bn\bn_gcd.c" />
    <ClCompile Include="openssl\crypto\bn\bn_gf2m.c" />
    <ClCompile Include="openssl\crypto\bn\bn_intern.c" />
    <ClCompile Include="openssl\crypto\bn\bn_kron.c" />
    <ClCompile Include="openssl\crypto\bn\bn_lib.c" />
    <ClCompile Include="openssl\crypto\bn\bn_mod.c" />
    <ClCompile Include="openssl\crypto\bn\bn_mont.c" />
    <ClCompile Include="openssl\crypto\bn\bn_mpi.c" />
    <ClCompile Include="openssl\crypto\bn\bn_mul.c" />
    <ClCompile Include="openssl\crypto\bn\bn_nist.c" />
    <ClCompile Include="openssl\crypto\bn\bn_prime.c" />
    <ClCompile Include="openssl\crypto\bn\bn_print.c" />
    <ClCompile Include="openssl\crypto\bn\bn_rand.c" />
    <ClCompile Include="openssl\crypto\bn\bn_recp.c" />
    <ClCompile Include="openssl\crypto\bn\bn_shift.c" />
    <ClCompile Include="openssl\crypto\bn\bn_sqr.c" />
    <ClCompile Include="openssl\crypto\bn\bn_sqrt.c" />
    <ClCompile Include="openssl\crypto\bn\bn_srp.c" />
    <ClCompile Include="openssl\crypto\bn\bn_word.c" />
    <ClCompile Include="openssl\crypto\bn\bn_x931p.c" />
    <ClCompile Include="openssl\crypto\bn\rsaz_exp.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="openssl\crypto\buffer\buffer.c" />
    <ClCompile Include="openssl\crypto\buffer\buf_err.c" />
    <ClCompile Include="openssl\crypto\camellia\cmll_cfb.c" />
    <ClCompile Include="openssl\crypto\camellia\cmll_ctr.c" />
    <ClCompile Include="openssl\crypto\camellia\cmll_ecb.c" />
    <ClCompile Include="openssl\crypto\camellia\cmll_misc.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="openssl\crypto\camellia\cmll_ofb.c" />
    <ClCompile Include="openssl\crypto\cast\c_cfb64.c" />
    <ClCompile Include="openssl\crypto\cast\c_ecb.c" />
    <ClCompile Include="openssl\crypto\cast\c_enc.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="openssl\crypto\cast\c_ofb64.c" />
    <ClCompile Include="openssl\crypto\cast\c_skey.c" />
    <ClCompile Include="openssl\crypto\cmac\cmac.c" />
    <ClCompile Include="openssl\crypto\cmac\cm_ameth.c" />
    <ClCompile Include="openssl\crypto\cmac\cm_pmeth.c" />
    <ClCompile Include="openssl\crypto\cms\cms_asn1.c" />
    <ClCompile Include="openssl\crypto\cms\cms_att.c" />
    <ClCompile Include="openssl\crypto\cms\cms_cd.c" />
    <ClCompile Include="openssl\crypto\cms\cms_dd.c" />
    <ClCompile Include="openssl\crypto\cms\cms_enc.c" />
    <ClCompile Include="openssl\crypto\cms\cms_env.c" />
    <ClCompile Include="openssl\crypto\cms\cms_err.c" />
    <ClCompile Include="openssl\crypto\cms\cms_ess.c" />
    <ClCompile Include="openssl\crypto\cms\cms_io.c" />
    <ClCompile Include="openssl\crypto\cms\cms_kari.c" />
    <ClCompile Include="openssl\crypto\cms\cms_lib.c" />
    <ClCompile Include="openssl\crypto\cms\cms_pwri.c" />
    <ClCompile Include="openssl\crypto\cms\cms_sd.c" />
    <ClCompile Include="openssl\crypto\cms\cms_smime.c" />
    <ClCompile Include="openssl\crypto\comp\comp_err.c" />
    <ClCompile Include="openssl\crypto\comp\comp_lib.c" />
    <ClCompile Include="openssl\crypto\comp\c_zlib.c" />
    <ClCompile Include="openssl\crypto\conf\conf_api.c" />
    <ClCompile Include="openssl\crypto\conf\conf_def.c" />
    <ClCompile Include="openssl\crypto\conf\conf_err.c" />
    <ClCompile Include="openssl\crypto\conf\conf_lib.c" />
    <ClCompile Include="openssl\crypto\conf\conf_mall.c" />
    <ClCompile Include="openssl\crypto\conf\conf_mod.c" />
    <ClCompile Include="openssl\crypto\conf\conf_sap.c" />
    <ClCompile Include="openssl\crypto\cpt_err.c" />
    <ClCompile Include="openssl\crypto\cryptlib.c" />
    <ClCompile Include="openssl\crypto\ct\ct_b64.c" />
    <ClCompile Include="openssl\crypto\ct\ct_err.c" />
    <ClCompile Include="openssl\crypto\ct\ct_log.c" />
    <ClCompile Include="openssl\crypto\ct\ct_oct.c" />
    <ClCompile Include="openssl\crypto\ct\ct_policy.c" />
    <ClCompile Include="openssl\crypto\ct\ct_prn.c" />
    <ClCompile Include="openssl\crypto\ct\ct_sct.c" />
    <ClCompile Include="openssl\crypto\ct\ct_sct_ctx.c" />
    <ClCompile Include="openssl\crypto\ct\ct_vfy.c" />
    <ClCompile Include="openssl\crypto\ct\ct_x509v3.c" />
    <ClCompile Include="openssl\crypto\cversion.c" />
    <ClCompile Include="openssl\crypto\des\cbc_cksm.c" />
    <ClCompile Include="openssl\crypto\des\cbc_enc.c" />
    <ClCompile Include="openssl\crypto\des\cfb64ede.c" />
    <ClCompile Include="openssl\crypto\des\cfb64enc.c" />
    <ClCompile Include="openssl\crypto\des\cfb_enc.c" />
    <ClCompile Include="openssl\crypto\des\des_enc.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="openssl\crypto\des\ecb3_enc.c" />
    <ClCompile Include="openssl\crypto\des\ecb_enc.c" />
    <ClCompile Include="openssl\crypto\des\fcrypt.c" />
    <ClCompile Include="openssl\crypto\des\fcrypt_b.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="openssl\crypto\des\ofb64ede.c" />
    <ClCompile Include="openssl\crypto\des\ofb64enc.c" />
    <ClCompile Include="openssl\crypto\des\ofb_enc.c" />
    <ClCompile Include="openssl\crypto\des\pcbc_enc.c" />
    <ClCompile Include="openssl\crypto\des\qud_cksm.c" />
    <ClCompile Include="openssl\crypto\des\rand_key.c" />
    <ClCompile Include="openssl\crypto\des\rpc_enc.c" />
    <ClCompile Include="openssl\crypto\des\set_key.c" />
    <ClCompile Include="openssl\crypto\des\str2key.c" />
    <ClCompile Include="openssl\crypto\des\xcbc_enc.c" />
    <ClCompile Include="openssl\crypto\dh\dh_ameth.c" />
    <ClCompile Include="openssl\crypto\dh\dh_asn1.c" />
    <ClCompile Include="openssl\crypto\dh\dh_check.c" />
    <ClCompile Include="openssl\crypto\dh\dh_depr.c" />
    <ClCompile Include="openssl\crypto\dh\dh_err.c" />
    <ClCompile Include="openssl\crypto\dh\dh_gen.c" />
    <ClCompile Include="openssl\crypto\dh\dh_kdf.c" />
    <ClCompile Include="openssl\crypto\dh\dh_key.c" />
    <ClCompile Include="openssl\crypto\dh\dh_lib.c" />
    <ClCompile Include="openssl\crypto\dh\dh_meth.c" />
    <ClCompile Include="openssl\crypto\dh\dh_pmeth.c" />
    <ClCompile Include="openssl\crypto\dh\dh_prn.c" />
    <ClCompile Include="openssl\crypto\dh\dh_rfc5114.c" />
    <ClCompile Include="openssl\crypto\dllmain.c">
      <ExcludedFromBuild Condition="'$(Configuration)'=='Debug'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)'=='Release'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)'=='ReleaseLTO'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="openssl\crypto\dsa\dsa_ameth.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_asn1.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_depr.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_err.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_gen.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_key.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_lib.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_meth.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_ossl.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_pmeth.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_prn.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_sign.c" />
    <ClCompile Include="openssl\crypto\dsa\dsa_vrf.c" />
    <ClCompile Include="openssl\crypto\dso\dso_dl.c" />
    <ClCompile Include="openssl\crypto\dso\dso_dlfcn.c" />
    <ClCompile Include="openssl\crypto\dso\dso_err.c" />
    <ClCompile Include="openssl\crypto\dso\dso_lib.c" />
    <ClCompile Include="openssl\crypto\dso\dso_openssl.c" />
    <ClCompile Include="openssl\crypto\dso\dso_vms.c" />
    <ClCompile Include="openssl\crypto\dso\dso_win32.c" />
    <ClCompile Include="openssl\crypto\ebcdic.c" />
    <ClCompile Include="openssl\crypto\ec\curve25519.c" />
    <ClCompile Include="openssl\crypto\ec\ec2_mult.c" />
    <ClCompile Include="openssl\crypto\ec\ec2_oct.c" />
    <ClCompile Include="openssl\crypto\ec\ec2_smpl.c" />
    <ClCompile Include="openssl\crypto\ec\ecdh_kdf.c" />
    <ClCompile Include="openssl\crypto\ec\ecdh_ossl.c" />
    <ClCompile Include="openssl\crypto\ec\ecdsa_ossl.c" />
    <ClCompile Include="openssl\crypto\ec\ecdsa_sign.c" />
    <ClCompile Include="openssl\crypto\ec\ecdsa_vrf.c" />
    <ClCompile Include="openssl\crypto\ec\eck_prn.c" />
    <ClCompile Include="openssl\crypto\ec\ecp_mont.c" />
    <ClCompile Include="openssl\crypto\ec\ecp_nist.c" />
    <ClCompile Include="openssl\crypto\ec\ecp_nistp224.c" />
    <ClCompile Include="openssl\crypto\ec\ecp_nistp256.c" />
    <ClCompile Include="openssl\crypto\ec\ecp_nistp521.c" />
    <ClCompile Include="openssl\crypto\ec\ecp_nistputil.c" />
    <ClCompile Include="openssl\crypto\ec\ecp_nistz256.c" />
    <ClCompile Include="openssl\crypto\ec\ecp_oct.c" />
    <ClCompile Include="openssl\crypto\ec\ecp_smpl.c" />
    <ClCompile Include="openssl\crypto\ec\ecx_meth.c" />
    <ClCompile Include="openssl\crypto\ec\ec_ameth.c" />
    <ClCompile Include="openssl\crypto\ec\ec_asn1.c" />
    <ClCompile Include="openssl\crypto\ec\ec_check.c" />
    <ClCompile Include="openssl\crypto\ec\ec_curve.c" />
    <ClCompile Include="openssl\crypto\ec\ec_cvt.c" />
    <ClCompile Include="openssl\crypto\ec\ec_err.c" />
    <ClCompile Include="openssl\crypto\ec\ec_key.c" />
    <ClCompile Include="openssl\crypto\ec\ec_kmeth.c" />
    <ClCompile Include="openssl\crypto\ec\ec_lib.c" />
    <ClCompile Include="openssl\crypto\ec\ec_mult.c" />
    <ClCompile Include="openssl\crypto\ec\ec_oct.c" />
    <ClCompile Include="openssl\crypto\ec\ec_pmeth.c" />
    <ClCompile Include="openssl\crypto\ec\ec_print.c" />
    <ClCompile Include="openssl\crypto\engine\eng_all.c" />
    <ClCompile Include="openssl\crypto\engine\eng_cnf.c" />
    <ClCompile Include="openssl\crypto\engine\eng_cryptodev.c" />
    <ClCompile Include="openssl\crypto\engine\eng_ctrl.c" />
    <ClCompile Include="openssl\crypto\engine\eng_dyn.c" />
    <ClCompile Include="openssl\crypto\engine\eng_err.c" />
    <ClCompile Include="openssl\crypto\engine\eng_fat.c" />
    <ClCompile Include="openssl\crypto\engine\eng_init.c" />
    <ClCompile Include="openssl\crypto\engine\eng_lib.c" />
    <ClCompile Include="openssl\crypto\engine\eng_list.c" />
    <ClCompile Include="openssl\crypto\engine\eng_openssl.c" />
    <ClCompile Include="openssl\crypto\engine\eng_pkey.c" />
    <ClCompile Include="openssl\crypto\engine\eng_rdrand.c" />
    <ClCompile Include="openssl\crypto\engine\eng_table.c" />
    <ClCompile Include="openssl\crypto\engine\tb_asnmth.c" />
    <ClCompile Include="openssl\crypto\engine\tb_cipher.c" />
    <ClCompile Include="openssl\crypto\engine\tb_dh.c" />
    <ClCompile Include="openssl\crypto\engine\tb_digest.c" />
    <ClCompile Include="openssl\crypto\engine\tb_dsa.c" />
    <ClCompile Include="openssl\crypto\engine\tb_eckey.c" />
    <ClCompile Include="openssl\crypto\engine\tb_pkmeth.c" />
    <ClCompile Include="openssl\crypto\engine\tb_rand.c" />
    <ClCompile Include="openssl\crypto\engine\tb_rsa.c" />
    <ClCompile Include="openssl\crypto\err\err.c" />
    <ClCompile Include="openssl\crypto\err\err_all.c" />
    <ClCompile Include="openssl\crypto\err\err_prn.c" />
    <ClCompile Include="openssl\crypto\evp\bio_b64.c" />
    <ClCompile Include="openssl\crypto\evp\bio_enc.c" />
    <ClCompile Include="openssl\crypto\evp\bio_md.c" />
    <ClCompile Include="openssl\crypto\evp\bio_ok.c" />
    <ClCompile Include="openssl\crypto\evp\cmeth_lib.c" />
    <ClCompile Include="openssl\crypto\evp\c_allc.c" />
    <ClCompile Include="openssl\crypto\evp\c_alld.c" />
    <ClCompile Include="openssl\crypto\evp\digest.c" />
    <ClCompile Include="openssl\crypto\evp\encode.c" />
    <ClCompile Include="openssl\crypto\evp\evp_cnf.c" />
    <ClCompile Include="openssl\crypto\evp\evp_enc.c" />
    <ClCompile Include="openssl\crypto\evp\evp_err.c" />
    <ClCompile Include="openssl\crypto\evp\evp_key.c" />
    <ClCompile Include="openssl\crypto\evp\evp_lib.c" />
    <ClCompile Include="openssl\crypto\evp\evp_pbe.c" />
    <ClCompile Include="openssl\crypto\evp\evp_pkey.c" />
    <ClCompile Include="openssl\crypto\evp\e_aes.c" />
    <ClCompile Include="openssl\crypto\evp\e_aes_cbc_hmac_sha1.c" />
    <ClCompile Include="openssl\crypto\evp\e_aes_cbc_hmac_sha256.c" />
    <ClCompile Include="openssl\crypto\evp\e_bf.c" />
    <ClCompile Include="openssl\crypto\evp\e_camellia.c" />
    <ClCompile Include="openssl\crypto\evp\e_cast.c" />
    <ClCompile Include="openssl\crypto\evp\e_chacha20_poly1305.c" />
    <ClCompile Include="openssl\crypto\evp\e_des.c" />
    <ClCompile Include="openssl\crypto\evp\e_des3.c" />
    <ClCompile Include="openssl\crypto\evp\e_idea.c" />
    <ClCompile Include="openssl\crypto\evp\e_null.c" />
    <ClCompile Include="openssl\crypto\evp\e_old.c" />
    <ClCompile Include="openssl\crypto\evp\e_rc2.c" />
    <ClCompile Include="openssl\crypto\evp\e_rc4.c" />
    <ClCompile Include="openssl\crypto\evp\e_rc4_hmac_md5.c" />
    <ClCompile Include="openssl\crypto\evp\e_rc5.c" />
    <ClCompile Include="openssl\crypto\evp\e_seed.c" />
    <ClCompile Include="openssl\crypto\evp\e_xcbc_d.c" />
    <ClCompile Include="openssl\crypto\evp\m_md2.c" />
    <ClCompile Include="openssl\crypto\evp\m_md4.c" />
    <ClCompile Include="openssl\crypto\evp\m_md5.c" />
    <ClCompile Include="openssl\crypto\evp\m_md5_sha1.c" />
    <ClCompile Include="openssl\crypto\evp\m_mdc2.c" />
    <ClCompile Include="openssl\crypto\evp\m_null.c" />
    <ClCompile Include="openssl\crypto\evp\m_ripemd.c" />
    <ClCompile Include="openssl\crypto\evp\m_sha1.c" />
    <ClCompile Include="openssl\crypto\evp\m_sigver.c" />
    <ClCompile Include="openssl\crypto\evp\m_wp.c" />
    <ClCompile Include="openssl\crypto\evp\names.c" />
    <ClCompile Include="openssl\crypto\evp\p5_crpt.c" />
    <ClCompile Include="openssl\crypto\evp\p5_crpt2.c" />
    <ClCompile Include="openssl\crypto\evp\pmeth_fn.c" />
    <ClCompile Include="openssl\crypto\evp\pmeth_gn.c" />
    <ClCompile Include="openssl\crypto\evp\pmeth_lib.c" />
    <ClCompile Include="openssl\crypto\evp\p_dec.c" />
    <ClCompile Include="openssl\crypto\evp\p_enc.c" />
    <ClCompile Include="openssl\crypto\evp\p_lib.c" />
    <ClCompile Include="openssl\crypto\evp\p_open.c" />
    <ClCompile Include="openssl\crypto\evp\p_seal.c" />
    <ClCompile Include="openssl\crypto\evp\p_sign.c" />
    <ClCompile Include="openssl\crypto\evp\p_verify.c" />
    <ClCompile Include="openssl\crypto\evp\scrypt.c" />
    <ClCompile Include="openssl\crypto\ex_data.c" />
    <ClCompile Include="openssl\crypto\hmac\hmac.c" />
    <ClCompile Include="openssl\crypto\hmac\hm_ameth.c" />
    <ClCompile Include="openssl\crypto\hmac\hm_pmeth.c" />
    <ClCompile Include="openssl\crypto\idea\i_cbc.c" />
    <ClCompile Include="openssl\crypto\idea\i_cfb64.c" />
    <ClCompile Include="openssl\crypto\idea\i_ecb.c" />
    <ClCompile Include="openssl\crypto\idea\i_ofb64.c" />
    <ClCompile Include="openssl\crypto\idea\i_skey.c" />
    <ClCompile Include="openssl\crypto\init.c" />
    <ClCompile Include="openssl\crypto\kdf\hkdf.c" />
    <ClCompile Include="openssl\crypto\kdf\kdf_err.c" />
    <ClCompile Include="openssl\crypto\kdf\tls1_prf.c" />
    <ClCompile Include="openssl\crypto\lhash\lhash.c" />
    <ClCompile Include="openssl\crypto\lhash\lh_stats.c" />
    <ClCompile Include="openssl\crypto\md4\md4_dgst.c" />
    <ClCompile Include="openssl\crypto\md4\md4_one.c" />
    <ClCompile Include="openssl\crypto\md5\md5_dgst.c" />
    <ClCompile Include="openssl\crypto\md5\md5_one.c" />
    <ClCompile Include="openssl\crypto\mdc2\mdc2dgst.c" />
    <ClCompile Include="openssl\crypto\mdc2\mdc2_one.c" />
    <ClCompile Include="openssl\crypto\mem.c" />
    <ClCompile Include="openssl\crypto\mem_dbg.c" />
    <ClCompile Include="openssl\crypto\mem_sec.c" />
    <ClCompile Include="openssl\crypto\modes\cbc128.c" />
    <ClCompile Include="openssl\crypto\modes\ccm128.c" />
    <ClCompile Include="openssl\crypto\modes\cfb128.c" />
    <ClCompile Include="openssl\crypto\modes\ctr128.c" />
    <ClCompile Include="openssl\crypto\modes\cts128.c" />
    <ClCompile Include="openssl\crypto\modes\gcm128.c" />
    <ClCompile Include="openssl\crypto\modes\ocb128.c" />
    <ClCompile Include="openssl\crypto\modes\ofb128.c" />
    <ClCompile Include="openssl\crypto\modes\wrap128.c" />
    <ClCompile Include="openssl\crypto\modes\xts128.c" />
    <ClCompile Include="openssl\crypto\objects\obj_dat.c" />
    <ClCompile Include="openssl\crypto\objects\obj_err.c" />
    <ClCompile Include="openssl\crypto\objects\obj_lib.c" />
    <ClCompile Include="openssl\crypto\objects\obj_xref.c" />
    <ClCompile Include="openssl\crypto\objects\o_names.c" />
    <ClCompile Include="openssl\crypto\ocsp\ocsp_asn.c" />
    <ClCompile Include="openssl\crypto\ocsp\ocsp_cl.c" />
    <ClCompile Include="openssl\crypto\ocsp\ocsp_err.c" />
    <ClCompile Include="openssl\crypto\ocsp\ocsp_ext.c" />
    <ClCompile Include="openssl\crypto\ocsp\ocsp_ht.c" />
    <ClCompile Include="openssl\crypto\ocsp\ocsp_lib.c" />
    <ClCompile Include="openssl\crypto\ocsp\ocsp_prn.c" />
    <ClCompile Include="openssl\crypto\ocsp\ocsp_srv.c" />
    <ClCompile Include="openssl\crypto\ocsp\ocsp_vfy.c" />
    <ClCompile Include="openssl\crypto\ocsp\v3_ocsp.c" />
    <ClCompile Include="openssl\crypto\o_dir.c" />
    <ClCompile Include="openssl\crypto\o_fips.c" />
    <ClCompile Include="openssl\crypto\o_fopen.c" />
    <ClCompile Include="openssl\crypto\o_init.c" />
    <ClCompile Include="openssl\crypto\o_str.c" />
    <ClCompile Include="openssl\crypto\o_time.c" />
    <ClCompile Include="openssl\crypto\pem\pem_all.c" />
    <ClCompile Include="openssl\crypto\pem\pem_err.c" />
    <ClCompile Include="openssl\crypto\pem\pem_info.c" />
    <ClCompile Include="openssl\crypto\pem\pem_lib.c" />
    <ClCompile Include="openssl\crypto\pem\pem_oth.c" />
    <ClCompile Include="openssl\crypto\pem\pem_pk8.c" />
    <ClCompile Include="openssl\crypto\pem\pem_pkey.c" />
    <ClCompile Include="openssl\crypto\pem\pem_sign.c" />
    <ClCompile Include="openssl\crypto\pem\pem_x509.c" />
    <ClCompile Include="openssl\crypto\pem\pem_xaux.c" />
    <ClCompile Include="openssl\crypto\pem\pvkfmt.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_add.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_asn.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_attr.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_crpt.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_crt.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_decr.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_init.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_key.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_kiss.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_mutl.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_npas.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_p8d.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_p8e.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_sbag.c" />
    <ClCompile Include="openssl\crypto\pkcs12\p12_utl.c" />
    <ClCompile Include="openssl\crypto\pkcs12\pk12err.c" />
    <ClCompile Include="openssl\crypto\pkcs7\bio_pk7.c" />
    <ClCompile Include="openssl\crypto\pkcs7\pk7_asn1.c" />
    <ClCompile Include="openssl\crypto\pkcs7\pk7_attr.c" />
    <ClCompile Include="openssl\crypto\pkcs7\pk7_doit.c" />
    <ClCompile Include="openssl\crypto\pkcs7\pk7_lib.c" />
    <ClCompile Include="openssl\crypto\pkcs7\pk7_mime.c" />
    <ClCompile Include="openssl\crypto\pkcs7\pk7_smime.c" />
    <ClCompile Include="openssl\crypto\pkcs7\pkcs7err.c" />
    <ClCompile Include="openssl\crypto\poly1305\poly1305.c" />
    <ClCompile Include="openssl\crypto\rand\md_rand.c" />
    <ClCompile Include="openssl\crypto\rand\randfile.c" />
    <ClCompile Include="openssl\crypto\rand\rand_egd.c" />
    <ClCompile Include="openssl\crypto\rand\rand_err.c" />
    <ClCompile Include="openssl\crypto\rand\rand_lib.c" />
    <ClCompile Include="openssl\crypto\rand\rand_unix.c" />
    <ClCompile Include="openssl\crypto\rand\rand_vms.c" />
    <ClCompile Include="openssl\crypto\rand\rand_win.c" />
    <ClCompile Include="openssl\crypto\rc2\rc2cfb64.c" />
    <ClCompile Include="openssl\crypto\rc2\rc2ofb64.c" />
    <ClCompile Include="openssl\crypto\rc2\rc2_cbc.c" />
    <ClCompile Include="openssl\crypto\rc2\rc2_ecb.c" />
    <ClCompile Include="openssl\crypto\rc2\rc2_skey.c" />
    <ClCompile Include="openssl\crypto\ripemd\rmd_dgst.c" />
    <ClCompile Include="openssl\crypto\ripemd\rmd_one.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_ameth.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_asn1.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_chk.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_crpt.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_depr.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_err.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_gen.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_lib.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_meth.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_none.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_null.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_oaep.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_ossl.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_pk1.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_pmeth.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_prn.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_pss.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_saos.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_sign.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_ssl.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_x931.c" />
    <ClCompile Include="openssl\crypto\rsa\rsa_x931g.c" />
    <ClCompile Include="openssl\crypto\seed\seed.c" />
    <ClCompile Include="openssl\crypto\seed\seed_cbc.c" />
    <ClCompile Include="openssl\crypto\seed\seed_cfb.c" />
    <ClCompile Include="openssl\crypto\seed\seed_ecb.c" />
    <ClCompile Include="openssl\crypto\seed\seed_ofb.c" />
    <ClCompile Include="openssl\crypto\sha\sha1dgst.c" />
    <ClCompile Include="openssl\crypto\sha\sha1_one.c" />
    <ClCompile Include="openssl\crypto\sha\sha256.c" />
    <ClCompile Include="openssl\crypto\sha\sha512.c" />
    <ClCompile Include="openssl\crypto\srp\srp_lib.c" />
    <ClCompile Include="openssl\crypto\srp\srp_vfy.c" />
    <ClCompile Include="openssl\crypto\stack\stack.c" />
    <ClCompile Include="openssl\crypto\threads_none.c" />
    <ClCompile Include="openssl\crypto\threads_pthread.c" />
    <ClCompile Include="openssl\crypto\threads_win.c" />
    <ClCompile Include="openssl\crypto\ts\ts_asn1.c" />
    <ClCompile Include="openssl\crypto\ts\ts_conf.c" />
    <ClCompile Include="openssl\crypto\ts\ts_err.c" />
    <ClCompile Include="openssl\crypto\ts\ts_lib.c" />
    <ClCompile Include="openssl\crypto\ts\ts_req_print.c" />
    <ClCompile Include="openssl\crypto\ts\ts_req_utils.c" />
    <ClCompile Include="openssl\crypto\ts\ts_rsp_print.c" />
    <ClCompile Include="openssl\crypto\ts\ts_rsp_sign.c" />
    <ClCompile Include="openssl\crypto\ts\ts_rsp_utils.c" />
    <ClCompile Include="openssl\crypto\ts\ts_rsp_verify.c" />
    <ClCompile Include="openssl\crypto\ts\ts_verify_ctx.c" />
    <ClCompile Include="openssl\crypto\txt_db\txt_db.c" />
    <ClCompile Include="openssl\crypto\uid.c" />
    <ClCompile Include="openssl\crypto\ui\ui_err.c" />
    <ClCompile Include="openssl\crypto\ui\ui_lib.c" />
    <ClCompile Include="openssl\crypto\ui\ui_openssl.c" />
    <ClCompile Include="openssl\crypto\ui\ui_util.c" />
    <ClCompile Include="openssl\crypto\whrlpool\wp_block.c">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </ClCompile>
    <ClCompile Include="openssl\crypto\whrlpool\wp_dgst.c" />
    <ClCompile Include="openssl\crypto\x509v3\pcy_cache.c" />
    <ClCompile Include="openssl\crypto\x509v3\pcy_data.c" />
    <ClCompile Include="openssl\crypto\x509v3\pcy_lib.c" />
    <ClCompile Include="openssl\crypto\x509v3\pcy_map.c" />
    <ClCompile Include="openssl\crypto\x509v3\pcy_node.c" />
    <ClCompile Include="openssl\crypto\x509v3\pcy_tree.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3err.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_addr.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_akey.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_akeya.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_alt.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_asid.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_bcons.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_bitst.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_conf.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_cpols.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_crld.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_enum.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_extku.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_genn.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_ia5.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_info.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_int.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_lib.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_ncons.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_pci.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_pcia.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_pcons.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_pku.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_pmaps.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_prn.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_purp.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_skey.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_sxnet.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_tlsf.c" />
    <ClCompile Include="openssl\crypto\x509v3\v3_utl.c" />
    <ClCompile Include="openssl\crypto\x509\by_dir.c" />
    <ClCompile Include="openssl\crypto\x509\by_file.c" />
    <ClCompile Include="openssl\crypto\x509\t_crl.c" />
    <ClCompile Include="openssl\crypto\x509\t_req.c" />
    <ClCompile Include="openssl\crypto\x509\t_x509.c" />
    <ClCompile Include="openssl\crypto\x509\x509cset.c" />
    <ClCompile Include="openssl\crypto\x509\x509name.c" />
    <ClCompile Include="openssl\crypto\x509\x509rset.c" />
    <ClCompile Include="openssl\crypto\x509\x509spki.c" />
    <ClCompile Include="openssl\crypto\x509\x509type.c" />
    <ClCompile Include="openssl\crypto\x509\x509_att.c" />
    <ClCompile Include="openssl\crypto\x509\x509_cmp.c" />
    <ClCompile Include="openssl\crypto\x509\x509_d2.c" />
    <ClCompile Include="openssl\crypto\x509\x509_def.c" />
    <ClCompile Include="openssl\crypto\x509\x509_err.c" />
    <ClCompile Include="openssl\crypto\x509\x509_ext.c" />
    <ClCompile Include="openssl\crypto\x509\x509_lu.c" />
    <ClCompile Include="openssl\crypto\x509\x509_obj.c" />
    <ClCompile Include="openssl\crypto\x509\x509_r2x.c" />
    <ClCompile Include="openssl\crypto\x509\x509_req.c" />
    <ClCompile Include="openssl\crypto\x509\x509_set.c" />
    <ClCompile Include="openssl\crypto\x509\x509_trs.c" />
    <ClCompile Include="openssl\crypto\x509\x509_txt.c" />
    <ClCompile Include="openssl\crypto\x509\x509_v3.c" />
    <ClCompile Include="openssl\crypto\x509\x509_vfy.c" />
    <ClCompile Include="openssl\crypto\x509\x509_vpm.c" />
    <ClCompile Include="openssl\crypto\x509\x_all.c" />
    <ClCompile Include="openssl\crypto\x509\x_attrib.c" />
    <ClCompile Include="openssl\crypto\x509\x_crl.c" />
    <ClCompile Include="openssl\crypto\x509\x_exten.c" />
    <ClCompile Include="openssl\crypto\x509\x_name.c" />
    <ClCompile Include="openssl\crypto\x509\x_pubkey.c" />
    <ClCompile Include="openssl\crypto\x509\x_req.c" />
    <ClCompile Include="openssl\crypto\x509\x_x509.c" />
    <ClCompile Include="openssl\crypto\x509\x_x509a.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="openssl\crypto\aes\aes_locl.h" />
    <ClInclude Include="openssl\crypto\asn1\asn1_locl.h" />
    <ClInclude Include="openssl\crypto\asn1\charmap.h" />
    <ClInclude Include="openssl\crypto\async\arch\async_null.h" />
    <ClInclude Include="openssl\crypto\async\arch\async_posix.h" />
    <ClInclude Include="openssl\crypto\async\arch\async_win.h" />
    <ClInclude Include="openssl\crypto\async\async_locl.h" />
    <ClInclude Include="openssl\crypto\bf\bf_locl.h" />
    <ClInclude Include="openssl\crypto\bf\bf_pi.h" />
    <ClInclude Include="openssl\crypto\bio\bio_lcl.h" />
    <ClInclude Include="openssl\crypto\blake2\blake2_impl.h" />
    <ClInclude Include="openssl\crypto\blake2\blake2_locl.h" />
    <ClInclude Include="openssl\crypto\bn\bn_lcl.h" />
    <ClInclude Include="openssl\crypto\bn\bn_prime.h" />
    <ClInclude Include="openssl\crypto\bn\rsaz_exp.h" />
    <ClInclude Include="openssl\crypto\camellia\cmll_locl.h" />
    <ClInclude Include="openssl\crypto\cast\cast_lcl.h" />
    <ClInclude Include="openssl\crypto\cms\cms_lcl.h" />
    <ClInclude Include="openssl\crypto\comp\comp_lcl.h" />
    <ClInclude Include="openssl\crypto\conf\conf_def.h" />
    <ClInclude Include="openssl\crypto\ct\ct_locl.h" />
    <ClInclude Include="openssl\crypto\des\des_locl.h" />
    <ClInclude Include="openssl\crypto\des\rpc_des.h" />
    <ClInclude Include="openssl\crypto\des\spr.h" />
    <ClInclude Include="openssl\crypto\dh\dh_locl.h" />
    <ClInclude Include="openssl\crypto\dsa\dsa_locl.h" />
    <ClInclude Include="openssl\crypto\dso\dso_locl.h" />
    <ClInclude Include="openssl\crypto\ec\ec_lcl.h" />
    <ClInclude Include="openssl\crypto\engine\eng_int.h" />
    <ClInclude Include="openssl\crypto\evp\evp_locl.h" />
    <ClInclude Include="openssl\crypto\hmac\hmac_lcl.h" />
    <ClInclude Include="openssl\crypto\idea\idea_lcl.h" />
    <ClInclude Include="openssl\crypto\include\internal\asn1_int.h" />
    <ClInclude Include="openssl\crypto\include\internal\async.h" />
    <ClInclude Include="openssl\crypto\include\internal\bn_dh.h" />
    <ClInclude Include="openssl\crypto\include\internal\bn_int.h" />
    <ClInclude Include="openssl\crypto\include\internal\bn_srp.h" />
    <ClInclude Include="openssl\crypto\include\internal\chacha.h" />
    <ClInclude Include="openssl\crypto\include\internal\cryptlib.h" />
    <ClInclude Include="openssl\crypto\include\internal\cryptlib_int.h" />
    <ClInclude Include="openssl\crypto\include\internal\engine.h" />
    <ClInclude Include="openssl\crypto\include\internal\err_int.h" />
    <ClInclude Include="openssl\crypto\include\internal\evp_int.h" />
    <ClInclude Include="openssl\crypto\include\internal\md32_common.h" />
    <ClInclude Include="openssl\crypto\include\internal\objects.h" />
    <ClInclude Include="openssl\crypto\include\internal\poly1305.h" />
    <ClInclude Include="openssl\crypto\include\internal\rand.h" />
    <ClInclude Include="openssl\crypto\include\internal\x509_int.h" />
    <ClInclude Include="openssl\crypto\lhash\lhash_lcl.h" />
    <ClInclude Include="openssl\crypto\md4\md4_locl.h" />
    <ClInclude Include="openssl\crypto\md5\md5_locl.h" />
    <ClInclude Include="openssl\crypto\modes\modes_lcl.h" />
    <ClInclude Include="openssl\crypto\objects\obj_dat.h" />
    <ClInclude Include="openssl\crypto\objects\obj_lcl.h" />
    <ClInclude Include="openssl\crypto\objects\obj_xref.h" />
    <ClInclude Include="openssl\crypto\ocsp\ocsp_lcl.h" />
    <ClInclude Include="openssl\crypto\pkcs12\p12_lcl.h" />
    <ClInclude Include="openssl\crypto\rand\rand_lcl.h" />
    <ClInclude Include="openssl\crypto\rc2\rc2_locl.h" />
    <ClInclude Include="openssl\crypto\ripemd\rmdconst.h" />
    <ClInclude Include="openssl\crypto\ripemd\rmd_locl.h" />
    <ClInclude Include="openssl\crypto\rsa\rsa_locl.h" />
    <ClInclude Include="openssl\crypto\seed\seed_locl.h" />
    <ClInclude Include="openssl\crypto\sha\sha_locl.h" />
    <ClInclude Include="openssl\crypto\ts\ts_lcl.h" />
    <ClInclude Include="openssl\crypto\ui\ui_locl.h" />
    <ClInclude Include="openssl\crypto\whrlpool\wp_locl.h" />
    <ClInclude Include="openssl\crypto\x509v3\ext_dat.h" />
    <ClInclude Include="openssl\crypto\x509v3\pcy_int.h" />
    <ClInclude Include="openssl\crypto\x509\x509_lcl.h" />
    <ClInclude Include="openssl\include\internal\asn1t.h" />
    <ClInclude Include="openssl\include\internal\bio.h" />
    <ClInclude Include="openssl\include\internal\comp.h" />
    <ClInclude Include="openssl\include\internal\conf.h" />
    <ClInclude Include="openssl\include\internal\constant_time_locl.h" />
    <ClInclude Include="openssl\include\internal\dane.h" />
    <ClInclude Include="openssl\include\internal\dso.h" />
    <ClInclude Include="openssl\include\internal\err.h" />
    <ClInclude Include="openssl\include\internal\numbers.h" />
    <ClInclude Include="openssl\include\internal\o_dir.h" />
    <ClInclude Include="openssl\include\internal\o_str.h" />
    <ClInclude Include="openssl\include\internal\thread_once.h" />
    <ClInclude Include="openssl\include\openssl\aes.h" />
    <ClInclude Include="openssl\include\openssl\asn1.h" />
    <ClInclude Include="openssl\include\openssl\asn1t.h" />
    <ClInclude Include="openssl\include\openssl\asn1_mac.h" />
    <ClInclude Include="openssl\include\openssl\async.h" />
    <ClInclude Include="openssl\include\openssl\bio.h" />
    <ClInclude Include="openssl\include\openssl\blowfish.h" />
    <ClInclude Include="openssl\include\openssl\bn.h" />
    <ClInclude Include="openssl\include\openssl\buffer.h" />
    <ClInclude Include="openssl\include\openssl\camellia.h" />
    <ClInclude Include="openssl\include\openssl\cast.h" />
    <ClInclude Include="openssl\include\openssl\cmac.h" />
    <ClInclude Include="openssl\include\openssl\cms.h" />
    <ClInclude Include="openssl\include\openssl\comp.h" />
    <ClInclude Include="openssl\include\openssl\conf.h" />
    <ClInclude Include="openssl\include\openssl\conf_api.h" />
    <ClInclude Include="openssl\include\openssl\crypto.h" />
    <ClInclude Include="openssl\include\openssl\ct.h" />
    <ClInclude Include="openssl\include\openssl\des.h" />
    <ClInclude Include="openssl\include\openssl\dh.h" />
    <ClInclude Include="openssl\include\openssl\dsa.h" />
    <ClInclude Include="openssl\include\openssl\dtls1.h" />
    <ClInclude Include="openssl\include\openssl\ebcdic.h" />
    <ClInclude Include="openssl\include\openssl\ec.h" />
    <ClInclude Include="openssl\include\openssl\ecdh.h" />
    <ClInclude Include="openssl\include\openssl\ecdsa.h" />
    <ClInclude Include="openssl\include\openssl\engine.h" />
    <ClInclude Include="openssl\include\openssl\err.h" />
    <ClInclude Include="openssl\include\openssl\evp.h" />
    <ClInclude Include="openssl\include\openssl\e_os2.h" />
    <ClInclude Include="openssl\include\openssl\hmac.h" />
    <ClInclude Include="openssl\include\openssl\idea.h" />
    <ClInclude Include="openssl\include\openssl\kdf.h" />
    <ClInclude Include="openssl\include\openssl\lhash.h" />
    <ClInclude Include="openssl\include\openssl\md2.h" />
    <ClInclude Include="openssl\include\openssl\md4.h" />
    <ClInclude Include="openssl\include\openssl\md5.h" />
    <ClInclude Include="openssl\include\openssl\mdc2.h" />
    <ClInclude Include="openssl\include\openssl\modes.h" />
    <ClInclude Include="openssl\include\openssl\objects.h" />
    <ClInclude Include="openssl\include\openssl\obj_mac.h" />
    <ClInclude Include="openssl\include\openssl\ocsp.h" />
    <ClInclude Include="openssl\include\openssl\opensslv.h" />
    <ClInclude Include="openssl\include\openssl\ossl_typ.h" />
    <ClInclude Include="openssl\include\openssl\pem.h" />
    <ClInclude Include="openssl\include\openssl\pem2.h" />
    <ClInclude Include="openssl\include\openssl\pkcs12.h" />
    <ClInclude Include="openssl\include\openssl\pkcs7.h" />
    <ClInclude Include="openssl\include\openssl\rand.h" />
    <ClInclude Include="openssl\include\openssl\rc2.h" />
    <ClInclude Include="openssl\include\openssl\rc4.h" />
    <ClInclude Include="openssl\include\openssl\rc5.h" />
    <ClInclude Include="openssl\include\openssl\ripemd.h" />
    <ClInclude Include="openssl\include\openssl\rsa.h" />
    <ClInclude Include="openssl\include\openssl\safestack.h" />
    <ClInclude Include="openssl\include\openssl\seed.h" />
    <ClInclude Include="openssl\include\openssl\sha.h" />
    <ClInclude Include="openssl\include\openssl\srp.h" />
    <ClInclude Include="openssl\include\openssl\srtp.h" />
    <ClInclude Include="openssl\include\openssl\ssl.h" />
    <ClInclude Include="openssl\include\openssl\ssl2.h" />
    <ClInclude Include="openssl\include\openssl\ssl3.h" />
    <ClInclude Include="openssl\include\openssl\stack.h" />
    <ClInclude Include="openssl\include\openssl\symhacks.h" />
    <ClInclude Include="openssl\include\openssl\tls1.h" />
    <ClInclude Include="openssl\include\openssl\ts.h" />
    <ClInclude Include="openssl\include\openssl\txt_db.h" />
    <ClInclude Include="openssl\include\openssl\ui.h" />
    <ClInclude Include="openssl\include\openssl\whrlpool.h" />
    <ClInclude Include="openssl\include\openssl\x509.h" />
    <ClInclude Include="openssl\include\openssl\x509v3.h" />
    <ClInclude Include="openssl\include\openssl\x509_vfy.h" />
    <ClInclude Include="opensslconf.h" />
  </ItemGroup>
  <ItemGroup>
    <YASM Include="crypto\aes-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\aesni-gcm-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\aesni-mb-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\aesni-sha256-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\aesni-x86.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\bf-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\bn-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\cast-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\cmll-x86.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\co-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\crypt586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\des-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\ecp_nistz256-avx2.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\ecp_nistz256-x86.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\ecp_nistz256-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\ghash-x86.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\md5-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\poly1305-x86.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\poly1305-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\rc4-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\rmd-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\rsaz-avx2.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\rsaz-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\sha1-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\sha1-mb-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\sha256-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
	<YASM Include="crypto\sha256-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\sha256-mb-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\sha512-586.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\vpaes-x86.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\wp-mmx.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\x86-gf2m.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\x86-mont.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\x86cpuid.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\aes-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\aesni-sha1-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\aesni-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\bsaes-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\cmll-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\ghash-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\md5-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\rc4-md5-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\rc4-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\sha1-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\sha512-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\vpaes-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\wp-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\x86_64-gf2m.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\x86_64-mont.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\x86_64-mont5.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\x86_64cpuid.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\chacha-x86.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='x64'">true</ExcludedFromBuild>
    </YASM>
    <YASM Include="crypto\chacha-x86_64.asm">
      <ExcludedFromBuild Condition="'$(Platform)'=='Win32'">true</ExcludedFromBuild>
    </YASM>
  </ItemGroup>
  <ItemGroup>
    <Text Include="readme.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="libcrypto.def" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="libcrypto.rc">
      <ExcludedFromBuild Condition="'$(Configuration)'=='Debug'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)'=='Release'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)'=='ReleaseLTO'">true</ExcludedFromBuild>
    </ResourceCompile>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{558D1ADE-D5D5-4123-AD31-32F0DBD7B6AB}</ProjectGuid>
    <RootNamespace>openssl</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\yasm.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <TargetName>cryptod</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <TargetName>cryptod</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <TargetName>crypto</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <TargetName>crypto</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>libcryptod</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>libcryptod</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>libcrypto</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'">
    <TargetName>libcrypto</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>libcrypto</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'">
    <TargetName>libcrypto</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_BN_ASM_PART_WORDS;_WIN32_WINNT=0x0502;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h

SET FLAGC="-DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPOLY1305_ASM -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS"
if not exist .\crypto\x86cpuid.asm (
perl openssl\crypto\x86cpuid.pl win32n %FLAGC% &gt;.\crypto\x86cpuid.asm
)
if not exist .\crypto\md5-586.asm (
perl openssl\crypto\md5\asm\md5-586.pl win32n %FLAGC% &gt;.\crypto\md5-586.asm
)
if not exist .\crypto\sha1-586.asm (
perl openssl\crypto\sha\asm\sha1-586.pl win32n %FLAGC% &gt;.\crypto\sha1-586.asm
)
if not exist .\crypto\sha256-586.asm (
perl openssl\crypto\sha\asm\sha256-586.pl win32n %FLAGC% &gt;.\crypto\sha256-586.asm
)
if not exist .\crypto\sha512-586.asm (
perl openssl\crypto\sha\asm\sha512-586.pl win32n %FLAGC% &gt;.\crypto\sha512-586.asm
)
if not exist .\crypto\rmd-586.asm (
perl openssl\crypto\ripemd\asm\rmd-586.pl win32n %FLAGC% &gt;.\crypto\rmd-586.asm
)
if not exist .\crypto\des-586.asm (
perl openssl\crypto\des\asm\des-586.pl win32n %FLAGC% &gt;.\crypto\des-586.asm
)
if not exist .\crypto\crypt586.asm (
perl openssl\crypto\des\asm\crypt586.pl win32n %FLAGC% &gt;.\crypto\crypt586.asm
)
if not exist .\crypto\rc4-586.asm (
perl openssl\crypto\rc4\asm\rc4-586.pl win32n %FLAGC% &gt;.\crypto\rc4-586.asm
)
if not exist .\crypto\bf-586.asm (
perl openssl\crypto\bf\asm\bf-586.pl win32n %FLAGC% &gt;.\crypto\bf-586.asm
)
if not exist .\crypto\cast-586.asm (
perl openssl\crypto\cast\asm\cast-586.pl win32n %FLAGC% &gt;.\crypto\cast-586.asm
)
if not exist .\crypto\aes-586.asm (
perl openssl\crypto\aes\asm\aes-586.pl win32n %FLAGC% &gt;.\crypto\aes-586.asm
)
if not exist .\crypto\vpaes-x86.asm (
perl openssl\crypto\aes\asm\vpaes-x86.pl win32n %FLAGC% &gt;.\crypto\vpaes-x86.asm
)
if not exist .\crypto\aesni-x86.asm (
perl openssl\crypto\aes\asm\aesni-x86.pl win32n %FLAGC% &gt;.\crypto\aesni-x86.asm
)
if not exist .\crypto\cmll-x86.asm (
perl openssl\crypto\camellia\asm\cmll-x86.pl win32n %FLAGC% &gt;.\crypto\cmll-x86.asm
)
if not exist .\crypto\ghash-x86.asm (
perl openssl\crypto\modes\asm\ghash-x86.pl win32n %FLAGC% &gt;.\crypto\ghash-x86.asm
)
if not exist .\crypto\bn-586.asm (
perl openssl\crypto\bn\asm\bn-586.pl win32n %FLAGC% &gt;.\crypto\bn-586.asm
)
if not exist .\crypto\co-586.asm (
perl openssl\crypto\bn\asm\co-586.pl win32n %FLAGC% &gt;.\crypto\co-586.asm
)
if not exist .\crypto\x86-mont.asm (
perl openssl\crypto\bn\asm\x86-mont.pl win32n %FLAGC% &gt;.\crypto\x86-mont.asm
)
if not exist .\crypto\x86-gf2m.asm (
perl openssl\crypto\bn\asm\x86-gf2m.pl win32n %FLAGC% &gt;.\crypto\x86-gf2m.asm
)
if not exist .\crypto\wp-mmx.asm (
perl openssl\crypto\whrlpool\asm\wp-mmx.pl win32n %FLAGC% &gt;.\crypto\wp-mmx.asm
)
if not exist .\crypto\chacha-x86.asm (
perl openssl\crypto\chacha\asm\chacha-x86.pll win32n %FLAGC% &gt;.\crypto\chacha-x86.asm
)
if not exist .\crypto\ecp_nistz256-x86.asm (
perl openssl\crypto\ec\asm\ecp_nistz256-x86.pl win32n %FLAGC% &gt;.\crypto\ecp_nistz256-x86.asm
)
if not exist .\crypto\poly1305-x86.asm (
perl openssl\crypto\poly1305\asm\poly1305-x86.pl win32n %FLAGC% &gt;.\crypto\poly1305-x86.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";_WIN32_WINNT=0x0600;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h

powershell  -executionpolicy bypass -nologo -File genasm.ps1

if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_BN_ASM_PART_WORDS;_WIN32_WINNT=0x0502;OPENSSL_NO_STATIC_ENGINE;_USRDLL;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libcrypto.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
SET FLAGC="-DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPOLY1305_ASM -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS"
if not exist .\crypto\x86cpuid.asm (
perl openssl\crypto\x86cpuid.pl win32n %FLAGC% &gt;.\crypto\x86cpuid.asm
)
if not exist .\crypto\md5-586.asm (
perl openssl\crypto\md5\asm\md5-586.pl win32n %FLAGC% &gt;.\crypto\md5-586.asm
)
if not exist .\crypto\sha1-586.asm (
perl openssl\crypto\sha\asm\sha1-586.pl win32n %FLAGC% &gt;.\crypto\sha1-586.asm
)
if not exist .\crypto\sha256-586.asm (
perl openssl\crypto\sha\asm\sha256-586.pl win32n %FLAGC% &gt;.\crypto\sha256-586.asm
)
if not exist .\crypto\sha512-586.asm (
perl openssl\crypto\sha\asm\sha512-586.pl win32n %FLAGC% &gt;.\crypto\sha512-586.asm
)
if not exist .\crypto\rmd-586.asm (
perl openssl\crypto\ripemd\asm\rmd-586.pl win32n %FLAGC% &gt;.\crypto\rmd-586.asm
)
if not exist .\crypto\des-586.asm (
perl openssl\crypto\des\asm\des-586.pl win32n %FLAGC% &gt;.\crypto\des-586.asm
)
if not exist .\crypto\crypt586.asm (
perl openssl\crypto\des\asm\crypt586.pl win32n %FLAGC% &gt;.\crypto\crypt586.asm
)
if not exist .\crypto\rc4-586.asm (
perl openssl\crypto\rc4\asm\rc4-586.pl win32n %FLAGC% &gt;.\crypto\rc4-586.asm
)
if not exist .\crypto\bf-586.asm (
perl openssl\crypto\bf\asm\bf-586.pl win32n %FLAGC% &gt;.\crypto\bf-586.asm
)
if not exist .\crypto\cast-586.asm (
perl openssl\crypto\cast\asm\cast-586.pl win32n %FLAGC% &gt;.\crypto\cast-586.asm
)
if not exist .\crypto\aes-586.asm (
perl openssl\crypto\aes\asm\aes-586.pl win32n %FLAGC% &gt;.\crypto\aes-586.asm
)
if not exist .\crypto\vpaes-x86.asm (
perl openssl\crypto\aes\asm\vpaes-x86.pl win32n %FLAGC% &gt;.\crypto\vpaes-x86.asm
)
if not exist .\crypto\aesni-x86.asm (
perl openssl\crypto\aes\asm\aesni-x86.pl win32n %FLAGC% &gt;.\crypto\aesni-x86.asm
)
if not exist .\crypto\cmll-x86.asm (
perl openssl\crypto\camellia\asm\cmll-x86.pl win32n %FLAGC% &gt;.\crypto\cmll-x86.asm
)
if not exist .\crypto\ghash-x86.asm (
perl openssl\crypto\modes\asm\ghash-x86.pl win32n %FLAGC% &gt;.\crypto\ghash-x86.asm
)
if not exist .\crypto\bn-586.asm (
perl openssl\crypto\bn\asm\bn-586.pl win32n %FLAGC% &gt;.\crypto\bn-586.asm
)
if not exist .\crypto\co-586.asm (
perl openssl\crypto\bn\asm\co-586.pl win32n %FLAGC% &gt;.\crypto\co-586.asm
)
if not exist .\crypto\x86-mont.asm (
perl openssl\crypto\bn\asm\x86-mont.pl win32n %FLAGC% &gt;.\crypto\x86-mont.asm
)
if not exist .\crypto\x86-gf2m.asm (
perl openssl\crypto\bn\asm\x86-gf2m.pl win32n %FLAGC% &gt;.\crypto\x86-gf2m.asm
)
if not exist .\crypto\wp-mmx.asm (
perl openssl\crypto\whrlpool\asm\wp-mmx.pl win32n %FLAGC% &gt;.\crypto\wp-mmx.asm
)
if not exist .\crypto\chacha-x86.asm (
perl openssl\crypto\chacha\asm\chacha-x86.pll win32n %FLAGC% &gt;.\crypto\chacha-x86.asm
)
if not exist .\crypto\ecp_nistz256-x86.asm (
perl openssl\crypto\ec\asm\ecp_nistz256-x86.pl win32n %FLAGC% &gt;.\crypto\ecp_nistz256-x86.asm
)
if not exist .\crypto\poly1305-x86.asm (
perl openssl\crypto\poly1305\asm\poly1305-x86.pl win32n %FLAGC% &gt;.\crypto\poly1305-x86.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";_WIN32_WINNT=0x0600;OPENSSL_NO_STATIC_ENGINE;_USRDLL;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libcrypto.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
      <MinimumRequiredVersion>6.0</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h

powershell  -executionpolicy bypass -nologo -File genasm.ps1

if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
    <YASM>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </YASM>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_BN_ASM_PART_WORDS;_WIN32_WINNT=0x0502;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
    </Lib>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
SET FLAGC="-DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPOLY1305_ASM -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS"
if not exist .\crypto\x86cpuid.asm (
perl openssl\crypto\x86cpuid.pl win32n %FLAGC% &gt;.\crypto\x86cpuid.asm
)
if not exist .\crypto\md5-586.asm (
perl openssl\crypto\md5\asm\md5-586.pl win32n %FLAGC% &gt;.\crypto\md5-586.asm
)
if not exist .\crypto\sha1-586.asm (
perl openssl\crypto\sha\asm\sha1-586.pl win32n %FLAGC% &gt;.\crypto\sha1-586.asm
)
if not exist .\crypto\sha256-586.asm (
perl openssl\crypto\sha\asm\sha256-586.pl win32n %FLAGC% &gt;.\crypto\sha256-586.asm
)
if not exist .\crypto\sha512-586.asm (
perl openssl\crypto\sha\asm\sha512-586.pl win32n %FLAGC% &gt;.\crypto\sha512-586.asm
)
if not exist .\crypto\rmd-586.asm (
perl openssl\crypto\ripemd\asm\rmd-586.pl win32n %FLAGC% &gt;.\crypto\rmd-586.asm
)
if not exist .\crypto\des-586.asm (
perl openssl\crypto\des\asm\des-586.pl win32n %FLAGC% &gt;.\crypto\des-586.asm
)
if not exist .\crypto\crypt586.asm (
perl openssl\crypto\des\asm\crypt586.pl win32n %FLAGC% &gt;.\crypto\crypt586.asm
)
if not exist .\crypto\rc4-586.asm (
perl openssl\crypto\rc4\asm\rc4-586.pl win32n %FLAGC% &gt;.\crypto\rc4-586.asm
)
if not exist .\crypto\bf-586.asm (
perl openssl\crypto\bf\asm\bf-586.pl win32n %FLAGC% &gt;.\crypto\bf-586.asm
)
if not exist .\crypto\cast-586.asm (
perl openssl\crypto\cast\asm\cast-586.pl win32n %FLAGC% &gt;.\crypto\cast-586.asm
)
if not exist .\crypto\aes-586.asm (
perl openssl\crypto\aes\asm\aes-586.pl win32n %FLAGC% &gt;.\crypto\aes-586.asm
)
if not exist .\crypto\vpaes-x86.asm (
perl openssl\crypto\aes\asm\vpaes-x86.pl win32n %FLAGC% &gt;.\crypto\vpaes-x86.asm
)
if not exist .\crypto\aesni-x86.asm (
perl openssl\crypto\aes\asm\aesni-x86.pl win32n %FLAGC% &gt;.\crypto\aesni-x86.asm
)
if not exist .\crypto\cmll-x86.asm (
perl openssl\crypto\camellia\asm\cmll-x86.pl win32n %FLAGC% &gt;.\crypto\cmll-x86.asm
)
if not exist .\crypto\ghash-x86.asm (
perl openssl\crypto\modes\asm\ghash-x86.pl win32n %FLAGC% &gt;.\crypto\ghash-x86.asm
)
if not exist .\crypto\bn-586.asm (
perl openssl\crypto\bn\asm\bn-586.pl win32n %FLAGC% &gt;.\crypto\bn-586.asm
)
if not exist .\crypto\co-586.asm (
perl openssl\crypto\bn\asm\co-586.pl win32n %FLAGC% &gt;.\crypto\co-586.asm
)
if not exist .\crypto\x86-mont.asm (
perl openssl\crypto\bn\asm\x86-mont.pl win32n %FLAGC% &gt;.\crypto\x86-mont.asm
)
if not exist .\crypto\x86-gf2m.asm (
perl openssl\crypto\bn\asm\x86-gf2m.pl win32n %FLAGC% &gt;.\crypto\x86-gf2m.asm
)
if not exist .\crypto\wp-mmx.asm (
perl openssl\crypto\whrlpool\asm\wp-mmx.pl win32n %FLAGC% &gt;.\crypto\wp-mmx.asm
)
if not exist .\crypto\chacha-x86.asm (
perl openssl\crypto\chacha\asm\chacha-x86.pll win32n %FLAGC% &gt;.\crypto\chacha-x86.asm
)
if not exist .\crypto\ecp_nistz256-x86.asm (
perl openssl\crypto\ec\asm\ecp_nistz256-x86.pl win32n %FLAGC% &gt;.\crypto\ecp_nistz256-x86.asm
)
if not exist .\crypto\poly1305-x86.asm (
perl openssl\crypto\poly1305\asm\poly1305-x86.pl win32n %FLAGC% &gt;.\crypto\poly1305-x86.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_BN_ASM_PART_WORDS;_WIN32_WINNT=0x0502;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
    </Lib>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
SET FLAGC="-DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPOLY1305_ASM -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS"
if not exist .\crypto\x86cpuid.asm (
perl openssl\crypto\x86cpuid.pl win32n %FLAGC% &gt;.\crypto\x86cpuid.asm
)
if not exist .\crypto\md5-586.asm (
perl openssl\crypto\md5\asm\md5-586.pl win32n %FLAGC% &gt;.\crypto\md5-586.asm
)
if not exist .\crypto\sha1-586.asm (
perl openssl\crypto\sha\asm\sha1-586.pl win32n %FLAGC% &gt;.\crypto\sha1-586.asm
)
if not exist .\crypto\sha256-586.asm (
perl openssl\crypto\sha\asm\sha256-586.pl win32n %FLAGC% &gt;.\crypto\sha256-586.asm
)
if not exist .\crypto\sha512-586.asm (
perl openssl\crypto\sha\asm\sha512-586.pl win32n %FLAGC% &gt;.\crypto\sha512-586.asm
)
if not exist .\crypto\rmd-586.asm (
perl openssl\crypto\ripemd\asm\rmd-586.pl win32n %FLAGC% &gt;.\crypto\rmd-586.asm
)
if not exist .\crypto\des-586.asm (
perl openssl\crypto\des\asm\des-586.pl win32n %FLAGC% &gt;.\crypto\des-586.asm
)
if not exist .\crypto\crypt586.asm (
perl openssl\crypto\des\asm\crypt586.pl win32n %FLAGC% &gt;.\crypto\crypt586.asm
)
if not exist .\crypto\rc4-586.asm (
perl openssl\crypto\rc4\asm\rc4-586.pl win32n %FLAGC% &gt;.\crypto\rc4-586.asm
)
if not exist .\crypto\bf-586.asm (
perl openssl\crypto\bf\asm\bf-586.pl win32n %FLAGC% &gt;.\crypto\bf-586.asm
)
if not exist .\crypto\cast-586.asm (
perl openssl\crypto\cast\asm\cast-586.pl win32n %FLAGC% &gt;.\crypto\cast-586.asm
)
if not exist .\crypto\aes-586.asm (
perl openssl\crypto\aes\asm\aes-586.pl win32n %FLAGC% &gt;.\crypto\aes-586.asm
)
if not exist .\crypto\vpaes-x86.asm (
perl openssl\crypto\aes\asm\vpaes-x86.pl win32n %FLAGC% &gt;.\crypto\vpaes-x86.asm
)
if not exist .\crypto\aesni-x86.asm (
perl openssl\crypto\aes\asm\aesni-x86.pl win32n %FLAGC% &gt;.\crypto\aesni-x86.asm
)
if not exist .\crypto\cmll-x86.asm (
perl openssl\crypto\camellia\asm\cmll-x86.pl win32n %FLAGC% &gt;.\crypto\cmll-x86.asm
)
if not exist .\crypto\ghash-x86.asm (
perl openssl\crypto\modes\asm\ghash-x86.pl win32n %FLAGC% &gt;.\crypto\ghash-x86.asm
)
if not exist .\crypto\bn-586.asm (
perl openssl\crypto\bn\asm\bn-586.pl win32n %FLAGC% &gt;.\crypto\bn-586.asm
)
if not exist .\crypto\co-586.asm (
perl openssl\crypto\bn\asm\co-586.pl win32n %FLAGC% &gt;.\crypto\co-586.asm
)
if not exist .\crypto\x86-mont.asm (
perl openssl\crypto\bn\asm\x86-mont.pl win32n %FLAGC% &gt;.\crypto\x86-mont.asm
)
if not exist .\crypto\x86-gf2m.asm (
perl openssl\crypto\bn\asm\x86-gf2m.pl win32n %FLAGC% &gt;.\crypto\x86-gf2m.asm
)
if not exist .\crypto\wp-mmx.asm (
perl openssl\crypto\whrlpool\asm\wp-mmx.pl win32n %FLAGC% &gt;.\crypto\wp-mmx.asm
)
if not exist .\crypto\chacha-x86.asm (
perl openssl\crypto\chacha\asm\chacha-x86.pll win32n %FLAGC% &gt;.\crypto\chacha-x86.asm
)
if not exist .\crypto\ecp_nistz256-x86.asm (
perl openssl\crypto\ec\asm\ecp_nistz256-x86.pl win32n %FLAGC% &gt;.\crypto\ecp_nistz256-x86.asm
)
if not exist .\crypto\poly1305-x86.asm (
perl openssl\crypto\poly1305\asm\poly1305-x86.pl win32n %FLAGC% &gt;.\crypto\poly1305-x86.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";_WIN32_WINNT=0x0600;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
    </Lib>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h

powershell  -executionpolicy bypass -nologo -File genasm.ps1

if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";_WIN32_WINNT=0x0600;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
    </Lib>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h

powershell  -executionpolicy bypass -nologo -File genasm.ps1

if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";OPENSSL_BN_ASM_PART_WORDS;_WIN32_WINNT=0x0502;OPENSSL_NO_STATIC_ENGINE;_USRDLL;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libcrypto.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
SET FLAGC="-DDSO_WIN32 -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DVPAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DPOLY1305_ASM -DOPENSSL_SYS_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE -DOPENSSL_BN_ASM_PART_WORDS"
if not exist .\crypto\x86cpuid.asm (
perl openssl\crypto\x86cpuid.pl win32n %FLAGC% &gt;.\crypto\x86cpuid.asm
)
if not exist .\crypto\md5-586.asm (
perl openssl\crypto\md5\asm\md5-586.pl win32n %FLAGC% &gt;.\crypto\md5-586.asm
)
if not exist .\crypto\sha1-586.asm (
perl openssl\crypto\sha\asm\sha1-586.pl win32n %FLAGC% &gt;.\crypto\sha1-586.asm
)
if not exist .\crypto\sha256-586.asm (
perl openssl\crypto\sha\asm\sha256-586.pl win32n %FLAGC% &gt;.\crypto\sha256-586.asm
)
if not exist .\crypto\sha512-586.asm (
perl openssl\crypto\sha\asm\sha512-586.pl win32n %FLAGC% &gt;.\crypto\sha512-586.asm
)
if not exist .\crypto\rmd-586.asm (
perl openssl\crypto\ripemd\asm\rmd-586.pl win32n %FLAGC% &gt;.\crypto\rmd-586.asm
)
if not exist .\crypto\des-586.asm (
perl openssl\crypto\des\asm\des-586.pl win32n %FLAGC% &gt;.\crypto\des-586.asm
)
if not exist .\crypto\crypt586.asm (
perl openssl\crypto\des\asm\crypt586.pl win32n %FLAGC% &gt;.\crypto\crypt586.asm
)
if not exist .\crypto\rc4-586.asm (
perl openssl\crypto\rc4\asm\rc4-586.pl win32n %FLAGC% &gt;.\crypto\rc4-586.asm
)
if not exist .\crypto\bf-586.asm (
perl openssl\crypto\bf\asm\bf-586.pl win32n %FLAGC% &gt;.\crypto\bf-586.asm
)
if not exist .\crypto\cast-586.asm (
perl openssl\crypto\cast\asm\cast-586.pl win32n %FLAGC% &gt;.\crypto\cast-586.asm
)
if not exist .\crypto\aes-586.asm (
perl openssl\crypto\aes\asm\aes-586.pl win32n %FLAGC% &gt;.\crypto\aes-586.asm
)
if not exist .\crypto\vpaes-x86.asm (
perl openssl\crypto\aes\asm\vpaes-x86.pl win32n %FLAGC% &gt;.\crypto\vpaes-x86.asm
)
if not exist .\crypto\aesni-x86.asm (
perl openssl\crypto\aes\asm\aesni-x86.pl win32n %FLAGC% &gt;.\crypto\aesni-x86.asm
)
if not exist .\crypto\cmll-x86.asm (
perl openssl\crypto\camellia\asm\cmll-x86.pl win32n %FLAGC% &gt;.\crypto\cmll-x86.asm
)
if not exist .\crypto\ghash-x86.asm (
perl openssl\crypto\modes\asm\ghash-x86.pl win32n %FLAGC% &gt;.\crypto\ghash-x86.asm
)
if not exist .\crypto\bn-586.asm (
perl openssl\crypto\bn\asm\bn-586.pl win32n %FLAGC% &gt;.\crypto\bn-586.asm
)
if not exist .\crypto\co-586.asm (
perl openssl\crypto\bn\asm\co-586.pl win32n %FLAGC% &gt;.\crypto\co-586.asm
)
if not exist .\crypto\x86-mont.asm (
perl openssl\crypto\bn\asm\x86-mont.pl win32n %FLAGC% &gt;.\crypto\x86-mont.asm
)
if not exist .\crypto\x86-gf2m.asm (
perl openssl\crypto\bn\asm\x86-gf2m.pl win32n %FLAGC% &gt;.\crypto\x86-gf2m.asm
)
if not exist .\crypto\wp-mmx.asm (
perl openssl\crypto\whrlpool\asm\wp-mmx.pl win32n %FLAGC% &gt;.\crypto\wp-mmx.asm
)
if not exist .\crypto\chacha-x86.asm (
perl openssl\crypto\chacha\asm\chacha-x86.pll win32n %FLAGC% &gt;.\crypto\chacha-x86.asm
)
if not exist .\crypto\ecp_nistz256-x86.asm (
perl openssl\crypto\ec\asm\ecp_nistz256-x86.pl win32n %FLAGC% &gt;.\crypto\ecp_nistz256-x86.asm
)
if not exist .\crypto\poly1305-x86.asm (
perl openssl\crypto\poly1305\asm\poly1305-x86.pl win32n %FLAGC% &gt;.\crypto\poly1305-x86.asm
)
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DSO_WIN32;OPENSSL_THREADS;OPENSSL_PIC;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;ECP_NISTZ256_ASM;POLY1305_ASM;OPENSSL_SYS_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;_CRT_SECURE_NO_DEPRECATE;OPENSSLDIR="./";ENGINESDIR="./";_WIN32_WINNT=0x0600;OPENSSL_NO_STATIC_ENGINE;_USRDLL;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include;openssl\crypto\include;.\crypto\include;openssl\crypto\modes;%(AdditionalIncludeDirectories</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4273;4311;4090;4133;4047;4146;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libcrypto.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>6.0</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h

powershell  -executionpolicy bypass -nologo -File genasm.ps1

if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\yasm.targets" />
  </ImportGroup>
</Project>