<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="DebugDLLStaticDeps|Win32">
      <Configuration>DebugDLLStaticDeps</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLLStaticDeps|x64">
      <Configuration>DebugDLLStaticDeps</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLStaticDeps|Win32">
      <Configuration>ReleaseDLLStaticDeps</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLLStaticDeps|x64">
      <Configuration>ReleaseDLLStaticDeps</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseLTO|Win32">
      <Configuration>ReleaseLTO</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseLTO|x64">
      <Configuration>ReleaseLTO</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="openssl\include\openssl\aes.h" />
    <ClInclude Include="openssl\include\openssl\asn1.h" />
    <ClInclude Include="openssl\include\openssl\asn1t.h" />
    <ClInclude Include="openssl\include\openssl\asn1_mac.h" />
    <ClInclude Include="openssl\include\openssl\async.h" />
    <ClInclude Include="openssl\include\openssl\bio.h" />
    <ClInclude Include="openssl\include\openssl\blowfish.h" />
    <ClInclude Include="openssl\include\openssl\bn.h" />
    <ClInclude Include="openssl\include\openssl\buffer.h" />
    <ClInclude Include="openssl\include\openssl\camellia.h" />
    <ClInclude Include="openssl\include\openssl\cast.h" />
    <ClInclude Include="openssl\include\openssl\cmac.h" />
    <ClInclude Include="openssl\include\openssl\cms.h" />
    <ClInclude Include="openssl\include\openssl\comp.h" />
    <ClInclude Include="openssl\include\openssl\conf.h" />
    <ClInclude Include="openssl\include\openssl\conf_api.h" />
    <ClInclude Include="openssl\include\openssl\crypto.h" />
    <ClInclude Include="openssl\include\openssl\ct.h" />
    <ClInclude Include="openssl\include\openssl\des.h" />
    <ClInclude Include="openssl\include\openssl\dh.h" />
    <ClInclude Include="openssl\include\openssl\dsa.h" />
    <ClInclude Include="openssl\include\openssl\dtls1.h" />
    <ClInclude Include="openssl\include\openssl\ebcdic.h" />
    <ClInclude Include="openssl\include\openssl\ec.h" />
    <ClInclude Include="openssl\include\openssl\ecdh.h" />
    <ClInclude Include="openssl\include\openssl\ecdsa.h" />
    <ClInclude Include="openssl\include\openssl\engine.h" />
    <ClInclude Include="openssl\include\openssl\err.h" />
    <ClInclude Include="openssl\include\openssl\evp.h" />
    <ClInclude Include="openssl\include\openssl\e_os2.h" />
    <ClInclude Include="openssl\include\openssl\hmac.h" />
    <ClInclude Include="openssl\include\openssl\idea.h" />
    <ClInclude Include="openssl\include\openssl\kdf.h" />
    <ClInclude Include="openssl\include\openssl\lhash.h" />
    <ClInclude Include="openssl\include\openssl\md2.h" />
    <ClInclude Include="openssl\include\openssl\md4.h" />
    <ClInclude Include="openssl\include\openssl\md5.h" />
    <ClInclude Include="openssl\include\openssl\mdc2.h" />
    <ClInclude Include="openssl\include\openssl\modes.h" />
    <ClInclude Include="openssl\include\openssl\objects.h" />
    <ClInclude Include="openssl\include\openssl\obj_mac.h" />
    <ClInclude Include="openssl\include\openssl\ocsp.h" />
    <ClInclude Include="openssl\include\openssl\opensslv.h" />
    <ClInclude Include="openssl\include\openssl\ossl_typ.h" />
    <ClInclude Include="openssl\include\openssl\pem.h" />
    <ClInclude Include="openssl\include\openssl\pem2.h" />
    <ClInclude Include="openssl\include\openssl\pkcs12.h" />
    <ClInclude Include="openssl\include\openssl\pkcs7.h" />
    <ClInclude Include="openssl\include\openssl\rand.h" />
    <ClInclude Include="openssl\include\openssl\rc2.h" />
    <ClInclude Include="openssl\include\openssl\rc4.h" />
    <ClInclude Include="openssl\include\openssl\rc5.h" />
    <ClInclude Include="openssl\include\openssl\ripemd.h" />
    <ClInclude Include="openssl\include\openssl\rsa.h" />
    <ClInclude Include="openssl\include\openssl\safestack.h" />
    <ClInclude Include="openssl\include\openssl\seed.h" />
    <ClInclude Include="openssl\include\openssl\sha.h" />
    <ClInclude Include="openssl\include\openssl\srp.h" />
    <ClInclude Include="openssl\include\openssl\srtp.h" />
    <ClInclude Include="openssl\include\openssl\ssl.h" />
    <ClInclude Include="openssl\include\openssl\ssl2.h" />
    <ClInclude Include="openssl\include\openssl\ssl3.h" />
    <ClInclude Include="openssl\include\openssl\stack.h" />
    <ClInclude Include="openssl\include\openssl\symhacks.h" />
    <ClInclude Include="openssl\include\openssl\tls1.h" />
    <ClInclude Include="openssl\include\openssl\ts.h" />
    <ClInclude Include="openssl\include\openssl\txt_db.h" />
    <ClInclude Include="openssl\include\openssl\ui.h" />
    <ClInclude Include="openssl\include\openssl\whrlpool.h" />
    <ClInclude Include="openssl\include\openssl\x509.h" />
    <ClInclude Include="openssl\include\openssl\x509v3.h" />
    <ClInclude Include="openssl\include\openssl\x509_vfy.h" />
    <ClInclude Include="openssl\ms\uplink.h" />
    <ClInclude Include="openssl\ssl\packet_locl.h" />
    <ClInclude Include="openssl\ssl\record\record.h" />
    <ClInclude Include="openssl\ssl\record\record_locl.h" />
    <ClInclude Include="openssl\ssl\ssl_locl.h" />
    <ClInclude Include="openssl\ssl\statem\statem.h" />
    <ClInclude Include="openssl\ssl\statem\statem_locl.h" />
    <ClInclude Include="openssl\opensslconf.h" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="readme.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Include="libssl.def" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="libssl.rc">
      <ExcludedFromBuild Condition="'$(Configuration)'=='Debug'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)'=='Release'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)'=='ReleaseLTO'">true</ExcludedFromBuild>
    </ResourceCompile>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="openssl\ssl\bio_ssl.c" />
    <ClCompile Include="openssl\ssl\d1_lib.c" />
    <ClCompile Include="openssl\ssl\d1_msg.c" />
    <ClCompile Include="openssl\ssl\d1_srtp.c" />
    <ClCompile Include="openssl\ssl\methods.c" />
    <ClCompile Include="openssl\ssl\pqueue.c" />
    <ClCompile Include="openssl\ssl\record\dtls1_bitmap.c" />
    <ClCompile Include="openssl\ssl\record\rec_layer_d1.c" />
    <ClCompile Include="openssl\ssl\record\rec_layer_s3.c" />
    <ClCompile Include="openssl\ssl\record\ssl3_buffer.c" />
    <ClCompile Include="openssl\ssl\record\ssl3_record.c" />
    <ClCompile Include="openssl\ssl\s3_cbc.c" />
    <ClCompile Include="openssl\ssl\s3_enc.c" />
    <ClCompile Include="openssl\ssl\s3_lib.c" />
    <ClCompile Include="openssl\ssl\s3_msg.c" />
    <ClCompile Include="openssl\ssl\ssl_asn1.c" />
    <ClCompile Include="openssl\ssl\ssl_cert.c" />
    <ClCompile Include="openssl\ssl\ssl_ciph.c" />
    <ClCompile Include="openssl\ssl\ssl_conf.c" />
    <ClCompile Include="openssl\ssl\ssl_err.c" />
    <ClCompile Include="openssl\ssl\ssl_init.c" />
    <ClCompile Include="openssl\ssl\ssl_lib.c" />
    <ClCompile Include="openssl\ssl\ssl_mcnf.c" />
    <ClCompile Include="openssl\ssl\ssl_rsa.c" />
    <ClCompile Include="openssl\ssl\ssl_sess.c" />
    <ClCompile Include="openssl\ssl\ssl_stat.c" />
    <ClCompile Include="openssl\ssl\ssl_txt.c" />
    <ClCompile Include="openssl\ssl\ssl_utst.c" />
    <ClCompile Include="openssl\ssl\statem\statem.c" />
    <ClCompile Include="openssl\ssl\statem\statem_clnt.c" />
    <ClCompile Include="openssl\ssl\statem\statem_dtls.c" />
    <ClCompile Include="openssl\ssl\statem\statem_lib.c" />
    <ClCompile Include="openssl\ssl\statem\statem_srvr.c" />
    <ClCompile Include="openssl\ssl\t1_enc.c" />
    <ClCompile Include="openssl\ssl\t1_ext.c" />
    <ClCompile Include="openssl\ssl\t1_lib.c" />
    <ClCompile Include="openssl\ssl\t1_reneg.c" />
    <ClCompile Include="openssl\ssl\t1_trce.c" />
    <ClCompile Include="openssl\ssl\tls_srp.c" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{4022EC32-21E2-4116-BB9F-6AFF604C23FF}</ProjectGuid>
    <RootNamespace>openssl</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLStaticDeps|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLStaticDeps|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '15.0'">v141</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '14.0'">v140</PlatformToolset>
    <PlatformToolset Condition="'$(VisualStudioVersion)' == '12.0'">v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLStaticDeps|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLStaticDeps|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <TargetName>ssld</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLStaticDeps|Win32'">
    <TargetName>ssld</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <TargetName>ssld</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLStaticDeps|x64'">
    <TargetName>ssld</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <TargetName>ssl</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'">
    <TargetName>ssl</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <TargetName>ssl</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'">
    <TargetName>ssl</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>libssld</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>libssld</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>libssl</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'">
    <TargetName>ssl</TargetName>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <OutDir>$(ProjectDir)..\..\msvc\</OutDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>libssl</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'">
    <TargetName>ssl</TargetName>
    <OutDir>$(ProjectDir)..\..\msvc\$(Platform)\</OutDir>
    <IntDir>$(SolutionDir)obj\$(Configuration)\$(Platform)\$(ProjectName)\</IntDir>
    <CustomBuildAfterTargets>Clean</CustomBuildAfterTargets>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_BN_ASM_PART_WORDS;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0502;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>libcryptod.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_MONT5;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;AES_ASM;VPAES_ASM;BSAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_USE_APPLINK;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0600;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>libcryptod.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_BN_ASM_PART_WORDS;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0502;OPENSSL_NO_STATIC_ENGINE;_USRDLL;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libssl.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>cryptod.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLStaticDeps|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_BN_ASM_PART_WORDS;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0502;OPENSSL_NO_STATIC_ENGINE;_USRDLL;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libssl.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>libcryptod.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_MONT5;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;AES_ASM;VPAES_ASM;BSAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_USE_APPLINK;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0600;OPENSSL_NO_STATIC_ENGINE;_USRDLL;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libssl.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>cryptod.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>6.0</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLLStaticDeps|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_MONT5;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;AES_ASM;VPAES_ASM;BSAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_USE_APPLINK;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0600;OPENSSL_NO_STATIC_ENGINE;_USRDLL;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <MinimalRebuild>false</MinimalRebuild>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libssl.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>libcryptod.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>6.0</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_BN_ASM_PART_WORDS;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0502;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
    </Lib>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>libcrypto.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_BN_ASM_PART_WORDS;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0502;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
    </Lib>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>libcrypto.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_MONT5;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;AES_ASM;VPAES_ASM;BSAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_USE_APPLINK;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0600;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
    </Lib>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>libcrypto.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseLTO|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_MONT5;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;AES_ASM;VPAES_ASM;BSAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_USE_APPLINK;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0600;OPENSSL_NO_DYNAMIC_ENGINE;_LIB;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <InterproceduralOptimization>SingleFile</InterproceduralOptimization>
      <ProgramDataBaseFileName>$(OutDir)\lib\$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Lib>
      <TargetMachine>MachineX64</TargetMachine>
    </Lib>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\lib\$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>libcrypto.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
    </Lib>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_BN_ASM_PART_WORDS;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0502;OPENSSL_NO_STATIC_ENGINE;_USRDLL;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libssl.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>crypto.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LargeAddressAware>true</LargeAddressAware>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_BN_ASM_PART_WORDS;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;RMD160_ASM;AES_ASM;VPAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0502;OPENSSL_NO_STATIC_ENGINE;_USRDLL;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libssl.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>crypto.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LargeAddressAware>true</LargeAddressAware>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
      <MinimumRequiredVersion>5.1</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_MONT5;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;AES_ASM;VPAES_ASM;BSAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_USE_APPLINK;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0600;OPENSSL_NO_STATIC_ENGINE;_USRDLL;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libssl.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>crypto.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <MinimumRequiredVersion>6.0</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLLStaticDeps|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;_WINDOWS;OPENSSL_THREADS;DSO_WIN32;OPENSSL_SYSNAME_WIN32;WIN32_LEAN_AND_MEAN;L_ENDIAN;OPENSSL_IA32_SSE2;OPENSSL_BN_ASM_MONT;OPENSSL_BN_ASM_MONT5;OPENSSL_BN_ASM_GF2m;SHA1_ASM;SHA256_ASM;SHA512_ASM;MD5_ASM;AES_ASM;VPAES_ASM;BSAES_ASM;WHIRLPOOL_ASM;GHASH_ASM;OPENSSL_USE_APPLINK;OPENSSL_NO_RC5;OPENSSL_NO_MD2;OPENSSL_NO_KRB5;OPENSSL_NO_JPAKE;NO_WINDOWS_BRAINDEATH;_WIN32_WINNT=0x0600;OPENSSL_NO_STATIC_ENGINE;_USRDLL;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <OmitFramePointers>true</OmitFramePointers>
      <EnableFiberSafeOptimizations>true</EnableFiberSafeOptimizations>
      <AdditionalIncludeDirectories>.\;openssl\;openssl\include\;openssl\crypto;openssl\crypto\evp;openssl\crypto\asn1;openssl\crypto\modes;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DisableSpecificWarnings>4996;4267;4244;4311;4273;4090;%(DisableSpecificWarnings)</DisableSpecificWarnings>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)\bin\$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)\lib\$(TargetName).lib</ImportLibrary>
      <ProgramDatabaseFile>$(OutDir)\lib\$(TargetName).pdb</ProgramDatabaseFile>
      <ModuleDefinitionFile>.\libssl.def</ModuleDefinitionFile>
      <ProfileGuidedDatabase>$(IntDir)\$(TargetName).pgd</ProfileGuidedDatabase>
      <AdditionalDependencies>crypto.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(OutDir)\lib\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/IGNORE:4221 %(AdditionalOptions)</AdditionalOptions>
      <MinimumRequiredVersion>6.0</MinimumRequiredVersion>
    </Link>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)"\include
mkdir "$(OutDir)"\include\openssl
copy openssl\include\openssl\*.h "$(OutDir)"\include\openssl
copy opensslconf.h "$(OutDir)"\include\openssl
mkdir $(OutDir)\licenses
copy openssl\LICENSE $(OutDir)\licenses\openssl.txt</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>copy opensslconf.h openssl\include\openssl\opensslconf.h
if exist "$(OutDir)"\include\openssl (
rd /s /q "$(OutDir)"\include\openssl
cd ../
cd $(ProjectDir)
)</Command>
    </PreBuildEvent>
    <CustomBuildStep>
      <Message>Custom Clean Step</Message>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>force_clean</Outputs>
      <Command>if exist "$(OutDir)"\include\openssl (
rmdir /s /q "$(OutDir)"\include\openssl
)
if exist $(OutDir)\licenses\openssl.txt (
del /f /q $(OutDir)\licenses\openssl.txt
)</Command>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>